<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2013-07-25T00:00:00Z</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember 1.0 RC6.1, RC5.1, RC4.1, RC3.1, RC2.1 RC1.1 Released</title>
    <link rel="alternate" href="/blog/2013/07/25/ember-1-0-rc6-1-rc5-1-rc4-1-rc3-1-rc2-1-and-rc1-1-released.html"/>
    <id>/blog/2013/07/25/ember-1-0-rc6-1-rc5-1-rc4-1-rc3-1-rc2-1-and-rc1-1-released.html</id>
    <published>2013-07-25T00:00:00Z</published>
    <updated>2013-07-25T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Because many Ember.js apps allow users to interact with private data, we
take security issues very seriously.&lt;/p&gt;

&lt;p&gt;In fact, we're one of the few JavaScript projects that has a
&lt;a href="http://emberjs.com/security/"&gt;clearly outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic mailing list exclusively...&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Because many Ember.js apps allow users to interact with private data, we
take security issues very seriously.&lt;/p&gt;

&lt;p&gt;In fact, we&amp;#39;re one of the few JavaScript projects that has a
&lt;a href="http://emberjs.com/security/"&gt;clearly outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic mailing list exclusively for security
announcements&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We want developers to know that they can trust Ember enough to build
their businesses on top of it.&lt;/p&gt;

&lt;p&gt;In that spirit, today we are announcing the release of Ember.js 1.0
RC6.1, RC5.1, RC4.1, RC3.1, RC2.1 and RC1.1. These are all security
releases that address a potential XSS security issue you can learn more
about by following this link:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM"&gt;CVE-2013-4170&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is recommended that you update immediately. In order to ease
upgrading, the only major change in each release is the security fix.&lt;/p&gt;

&lt;p&gt;We would like to thank Mario Heiderich of &lt;a href="https://cure53.de/"&gt;Cure53&lt;/a&gt;
for responsibly disclosing this issue, working with us on the patch
and the advisory, and having patience while we went through our
security procedure for the first time.&lt;/p&gt;

&lt;p&gt;Like a smoke detector or fire extinguisher, having a security procedure
is something that you hope that you don&amp;#39;t need; but when you need it,
you&amp;#39;re glad you have it.&lt;/p&gt;

&lt;p&gt;We hope that we can set an example for other projects in the JavaScript
world when it comes to taking security seriously. Initiatives like the
&lt;a href="https://nodesecurity.io/"&gt;Node Security Project&lt;/a&gt; are a step in the
right direction.&lt;/p&gt;

&lt;p&gt;We are very fortunate that this security issue is low severity. Due to
the sandboxed nature of the web browser, there are far fewer possible
exploit vectors for a JavaScript MVC framework to worry about than a
traditional server-side framework.&lt;/p&gt;

&lt;p&gt;That being said, we will remain vigilant in ensuring that even small
security issues are taken care of properly. If you discover what you
believe may be a security issue in Ember.js, we ask that you follow
our &lt;a href="http://emberjs.com/security/"&gt;responsible disclosure policy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, thanks to Yehuda Katz, Stefan Penner and Kris Selden, who
donated their valuable time to reviewing the patch, auditing other code
for similar vulnerabilities, and preparing the new releases.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC6</title>
    <link rel="alternate" href="/blog/2013/06/23/ember-1-0-rc6.html"/>
    <id>/blog/2013/06/23/ember-1-0-rc6.html</id>
    <published>2013-06-23T00:00:00Z</published>
    <updated>2013-06-23T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC6 has been released and is available from the
main website and at &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.  This
release features two big changes: 1) router update 2) Ember Components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Router Update&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The biggest change is router update (aka "router facelift...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC6 has been released and is available from the
main website and at &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.  This
release features two big changes: 1) router update 2) Ember Components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Router Update&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The biggest change is router update (aka &amp;quot;router facelift&amp;quot;), which addresses
two major issues. The first was inconsistent semantics between URL-based transitions
and &lt;code&gt;transitionTo&lt;/code&gt;. The second was spotty async support which made it difficult to
prevent or delay route entry in cases such as authentication and async code-loading.&lt;/p&gt;

&lt;p&gt;We have now harmonized URL changes and &lt;code&gt;transitionTo&lt;/code&gt; semantics and more fully embraced
asynchrony using promises.&lt;/p&gt;

&lt;p&gt;Additionally, router transitions have become first-class citizens and there are
new hooks to prevent or decorate transitions:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;willTransition&lt;/code&gt;: fires on current routes whenever a transition is about to take place
 &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;: hooks fired during the async validation phase&lt;/p&gt;

&lt;p&gt;Finally there is an &lt;code&gt;error&lt;/code&gt; event which fires whenever there is a rejected promise or
error thrown in any of the &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt; hooks.&lt;/p&gt;

&lt;p&gt;For more on new router features, see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://machty.s3.amazonaws.com/ember-facelift-presentation/index.html#/1"&gt;New router overview given by Alex Matchneer&amp;#39;s at the June Ember NYC Meetup &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/machty/5647589"&gt;Usage Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.embercasts.com/episodes/client-side-authentication-part-2"&gt;Client-side Authentication Part 2 Embercast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Special thanks to Alex Matchneer for his work on this!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember Components&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other major change is the introduction of Ember Components, which shares Web
Components&amp;#39; goal of facilitating creation of reusable higher-level page elements.&lt;/p&gt;

&lt;p&gt;Ember Components will generally consist of a &lt;code&gt;template&lt;/code&gt; and a &lt;code&gt;view&lt;/code&gt; which encapsulate the &lt;code&gt;template&lt;/code&gt;&amp;#39;s
property access and actions.  Any reference to outside constructs is handled through context
info passed into the &lt;code&gt;view&lt;/code&gt;.  Components can be customized through subclassing.&lt;/p&gt;

&lt;p&gt;Ember Components naming conventions are: 1) the &lt;code&gt;template&lt;/code&gt;&amp;#39;s name begins with &amp;#39;components/&amp;#39;, and 2) the
Component&amp;#39;s name must include a &amp;#39;-&amp;#39; (this latter convention is consistent with Web Components standards,
and prevents name collisions with built-in controls that wrap HTML elements). As an example, a component
might be named &lt;code&gt;&amp;#39;radio-button&amp;#39;&lt;/code&gt;.  Its &lt;code&gt;template&lt;/code&gt; would be &lt;code&gt;&amp;#39;components/radio-button&amp;#39;&lt;/code&gt; and you would call
it as &lt;code&gt;{{radio-button}}&lt;/code&gt; in other &lt;code&gt;templates&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned for more docs and examples of this exciting new feature.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC5</title>
    <link rel="alternate" href="/blog/2013/06/01/ember-1-0-rc5.html"/>
    <id>/blog/2013/06/01/ember-1-0-rc5.html</id>
    <published>2013-06-01T00:00:00Z</published>
    <updated>2013-06-01T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC5 has just been released and is now available from the
main website as well as &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RC5 fixes several regressions and bugs found in RC4. Notably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A performance regression caused by a change to run loop scheduling has...&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC5 has just been released and is now available from the
main website as well as &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RC5 fixes several regressions and bugs found in RC4. Notably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A performance regression caused by a change to run loop scheduling has
been fixed. Thanks to &lt;a href="https://twitter.com/ebryn"&gt;Erik Bryn&lt;/a&gt; for
working on this.&lt;/li&gt;
&lt;li&gt;Promises returned from a route&amp;#39;s &lt;code&gt;model&lt;/code&gt; hook could cause the app to
hang on page refresh. This has been fixed thanks to &lt;a href="https://twitter.com/machty"&gt;Alex Matchneer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ember-testing&lt;/code&gt; package, which contains additional helpers for
testing Ember.js apps, is no longer included in the production build.
This means less JavaScript for end users to load over the network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you to everyone who filed issues and pull requests. Please try out
RC5 in your applications and report any issues or regressions you find
by filing an &lt;a href="https://github.com/emberjs/ember.js/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, thanks to &lt;a href="https://twitter.com/stefanpenner"&gt;Stefan Penner&lt;/a&gt;, who
has been busting his tail to get Ember.js to the 1.0 finish line,
including doing the release engineering for these release candidates.
Thanks Stef!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data 0.13</title>
    <link rel="alternate" href="/blog/2013/05/28/ember-data-0-13.html"/>
    <id>/blog/2013/05/28/ember-data-0-13.html</id>
    <published>2013-05-28T00:00:00Z</published>
    <updated>2013-05-28T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today, we are pleased to announce the release of Ember Data 0.13.&lt;/p&gt;

&lt;p&gt;Ember Data 0.13 is the first official release of Ember Data. This should
make it easier for people to synchronize Ember.js and Ember Data
versions, and make reasoning about the upgrade...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, we are pleased to announce the release of Ember Data 0.13.&lt;/p&gt;

&lt;p&gt;Ember Data 0.13 is the first official release of Ember Data. This should
make it easier for people to synchronize Ember.js and Ember Data
versions, and make reasoning about the upgrade process much easier.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-data-0-13'&gt;Ember Data 0.13&lt;/h3&gt;
&lt;p&gt;In the past few months, Ember Data has stabilized a lot. We still consider
it alpha, and recommend it for production use only to those who like to
live on the bleeding edge and contribute back to the project. To make life
easier for those folks, though, we will be cutting regular releases like we
do with Ember.js.&lt;/p&gt;

&lt;p&gt;A few of the many folks involved in the changes in this release include
Tom Dale, Yehuda Katz, Cyril Fluck, Igor Terzic, Stefan Penner, Paul Chavard,
Gordon Hempton, Peter Wagenet. Thank you to you all and everyone else who
has contributed code and others.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_api-revision-removal'&gt;API Revision Removal&lt;/h4&gt;
&lt;p&gt;Now that we are doing regular releases, the API revision check has been
removed. You no longer need to provide the API revision number when
defining your store:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.Store = DS.Store.extend({
  &lt;span class="comment"&gt;// Delete this!&lt;/span&gt;
  &lt;span class="key"&gt;revision&lt;/span&gt;: &lt;span class="integer"&gt;13&lt;/span&gt;
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_ember-data-future-plans'&gt;Ember Data Future Plans&lt;/h3&gt;
&lt;p&gt;Our immediate goals for Ember Data are stabilization, bug fixes, and
documentation. There are only two major areas of improvement planned
before we beging promoting builds to prerelease and RC versions:&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_promises'&gt;Promises&lt;/h4&gt;
&lt;p&gt;Currently, most Ember Data APIs return objects that also implement a
&lt;code&gt;then()&lt;/code&gt; method, allowing them to be used interchangeably as either
models or promises.&lt;/p&gt;

&lt;p&gt;While this flexibility was convenient, it unfortunately caused confusing
semantics. Specifically, because a resolved promise stays resolved,
operations like reloading became very confusing.&lt;/p&gt;

&lt;p&gt;While not in this release, you should expect that future releases of
Ember Data will shift to an entirely promise-based API. This both
resolves the issues with confusing semantics as well as allows us to
implement some exciting features, like more powerful polymorphism.&lt;/p&gt;

&lt;p&gt;Thanks to Stefan Penner for leading the charge on this.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_error-handling'&gt;Error Handling&lt;/h4&gt;
&lt;p&gt;We want to make error handling and dealing with client and server
conflicts rock solid. A &lt;a href="https://github.com/emberjs/data/pull/958"&gt;pull request from Paul Chavard&lt;/a&gt;
is currently open and looks like a solid starting point for error
handling. You should see much more development on this in the near
future.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC4</title>
    <link rel="alternate" href="/blog/2013/05/28/ember-1-0-rc4.html"/>
    <id>/blog/2013/05/28/ember-1-0-rc4.html</id>
    <published>2013-05-28T00:00:00Z</published>
    <updated>2013-05-28T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;h4 class="anchorable-toc" id="toc_announcement"&gt;Announcement&lt;/h4&gt;
&lt;p&gt;We have &lt;a href="https://github.com/emberjs/ember.js/issues/2750"&gt;noticed&lt;/a&gt; a performance regression, a debug flag was left on by mistake. So if you really want the goodness of RC4 without this regression use &lt;a href="http://builds.emberjs.com/ember-bd1629e1f38888be881dbfdf29b779a0cdb4e85f.js"&gt;this build&lt;/a&gt;, we'll have an official release out soon.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, we are pleased to announce...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 class='anchorable-toc' id='toc_announcement'&gt;Announcement&lt;/h4&gt;
&lt;p&gt;We have &lt;a href="https://github.com/emberjs/ember.js/issues/2750"&gt;noticed&lt;/a&gt; a performance regression, a debug flag was left on by mistake. So if you really want the goodness of RC4 without this regression use &lt;a href="http://builds.emberjs.com/ember-bd1629e1f38888be881dbfdf29b779a0cdb4e85f.js"&gt;this build&lt;/a&gt;, we&amp;#39;ll have an official release out soon.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, we are pleased to announce Ember.js 1.0 RC4:&lt;/p&gt;

&lt;p&gt;This RC4 release of Ember puts us very close to the final 1.0 release.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-1-0-rc4'&gt;Ember.js 1.0 RC4&lt;/h3&gt;
&lt;p&gt;As we approach 1.0 final, our focus continues to be on bugfixes, performance, and
reliability.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_breaking-change-controller-model-setup'&gt;BREAKING CHANGE: Controller/Model Setup&lt;/h4&gt;
&lt;p&gt;One of the roles of &lt;code&gt;Route&lt;/code&gt; objects in an Ember application is to tell
controllers which model they should represent.&lt;/p&gt;

&lt;p&gt;By default, the object that you return from a route&amp;#39;s &lt;code&gt;model&lt;/code&gt; hook is
set as the &lt;code&gt;model&lt;/code&gt; property on the corresponding controller. So, for
example, if you have this route:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The array returned from &lt;code&gt;model&lt;/code&gt; would be set as the &lt;code&gt;model&lt;/code&gt; property of
the &lt;code&gt;App.PhotosController&lt;/code&gt;. This tells the controller that it should
present that model to its template.&lt;/p&gt;

&lt;p&gt;What if you need to set up additional controllers, beyond the primary
controller associated with that route? In that case, you can implement
the &lt;code&gt;setupController&lt;/code&gt; hook:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  },

  &lt;span class="function"&gt;setupController&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(controller, model) {
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.controllerFor(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;application&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;showingPhotos&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="predefined-constant"&gt;true&lt;/span&gt;);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is all well and good, but what if you wanted to &lt;strong&gt;prevent&lt;/strong&gt; a model
from being set on the &lt;code&gt;PhotosController&lt;/code&gt; at all?&lt;/p&gt;

&lt;p&gt;In RC3, &lt;em&gt;preventing this default behavior was impossible&lt;/em&gt;. In RC4,
&lt;strong&gt;implementing the &lt;code&gt;setupController&lt;/code&gt; hook prevents the default behavior
from happening. This is a potentially breaking change.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your route implements the &lt;code&gt;setupController&lt;/code&gt; hook &lt;em&gt;and&lt;/em&gt; you want to
preserve default behavior, &lt;strong&gt;make sure you call &lt;code&gt;_super()&lt;/code&gt; from within
the hook&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  },

  &lt;span class="function"&gt;setupController&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(controller, model) {
    &lt;span class="comment"&gt;// Call _super for default behavior&lt;/span&gt;
    &lt;span class="local-variable"&gt;this&lt;/span&gt;._super(controller, model);
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.controllerFor(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;application&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;showingPhotos&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="predefined-constant"&gt;true&lt;/span&gt;);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to Kris Selden and Luke Melia for pulling together PRs from
Paul Chavard, Rob Harper and input from others into a cohesive change.
We don&amp;#39;t take breaking changes lightly at this stage of the release
process, but this one is worthwhile.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_rsvp-2-0'&gt;RSVP 2.0&lt;/h4&gt;
&lt;p&gt;Ember now embeds version 2.0 of
&lt;a href="https://github.com/tildeio/rsvp.js"&gt;RSVP.js&lt;/a&gt;, a microlibrary for
&lt;a href="http://promises-aplus.github.io/promises-spec/"&gt;Promises/A+ compatible
promises&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of the Ember.js APIs that return promises use this library to
ensure compatible behavior.&lt;/p&gt;

&lt;p&gt;A big, big thanks to Stefan Penner for all of his work on improving the
promises story across both Ember and Ember Data.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_run-loop-extracted-to-backburner-js'&gt;Run Loop Extracted to Backburner.js&lt;/h4&gt;
&lt;p&gt;Erik Bryn has extracted the run loop into the
&lt;a href="https://github.com/ebryn/backburner.js"&gt;Backburner.js&lt;/a&gt; microlibrary,
which Ember now uses.&lt;/p&gt;

&lt;p&gt;This will allow other frameworks and libraries that use
Backburner to benefit from using a deferred event queue, and hopefully
we can share our work to make the web platform faster for everyone.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_handlebars-rc4-compatibility'&gt;Handlebars RC4 Compatibility&lt;/h4&gt;
&lt;p&gt;Ember.js RC4 requires the latest release of Handlebars, which is also at RC4.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_improved-route-redirection'&gt;Improved Route Redirection&lt;/h4&gt;
&lt;p&gt;Routes provide a &lt;code&gt;redirect&lt;/code&gt; hook that allow them to conditionally redirect to
a different route. For example, you may redirect the user to a login
route if you detect that they do not have an authentication token saved.&lt;/p&gt;

&lt;p&gt;Many improvements to the &lt;code&gt;redirect&lt;/code&gt; hook have been made to make it more
reliable. Additionally, you can now implement this hook in the
&lt;code&gt;ApplicationRoute&lt;/code&gt;, which previously would not work.&lt;/p&gt;

&lt;p&gt;Props to Tom Dale for this work.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-testing-improvements'&gt;ember-testing Improvements&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ember-testing&lt;/code&gt; package, included in Ember.js, is the
officially-supported library for writing unit and integration tests for
Ember apps. Introduced in RC3, this has continued to be improved, with
many bug fixes and performance improvements landing in RC4.&lt;/p&gt;

&lt;p&gt;A huge thanks to Teddy Zeeny for driving many of these improvements.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-disabledwhen-code-linkto-option'&gt;&lt;code&gt;disabledWhen&lt;/code&gt; {{linkTo}} Option&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{#linkTo}}&lt;/code&gt; Handlebars helper now has a &lt;code&gt;disabledWhen&lt;/code&gt; option that
can be bound to conditionally disable a link:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt; &lt;span class="error"&gt;'&lt;/span&gt;&lt;span class="attribute-name"&gt;upgradeAccount&lt;/span&gt;&lt;span class="error"&gt;'&lt;/span&gt; &lt;span class="attribute-name"&gt;disabledWhen&lt;/span&gt;=&lt;span class="attribute-value"&gt;isPremiumUser&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;Upgrade
Account&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to Trek Glowacki for this improvement.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data Progress Update</title>
    <link rel="alternate" href="/blog/2013/05/03/ember-data-progress-update.html"/>
    <id>/blog/2013/05/03/ember-data-progress-update.html</id>
    <published>2013-05-03T00:00:00Z</published>
    <updated>2013-05-03T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Just over a month ago, we told you about our &lt;a href="http://emberjs.com/blog/2013/03/22/stabilizing-ember-data.html"&gt;plans for stabilizing Ember
Data&lt;/a&gt;. I'd like
to give you an update on the status of those efforts.&lt;/p&gt;

&lt;p&gt;First, though, I'd like to thank everyone who has been contributing to Ember
Data. As an open source project...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Just over a month ago, we told you about our &lt;a href="http://emberjs.com/blog/2013/03/22/stabilizing-ember-data.html"&gt;plans for stabilizing Ember
Data&lt;/a&gt;. I&amp;#39;d like
to give you an update on the status of those efforts.&lt;/p&gt;

&lt;p&gt;First, though, I&amp;#39;d like to thank everyone who has been contributing to Ember
Data. As an open source project, a healthy, active community is our
lifeblood. In particular, I want to call out Igor Terzic, Stefan Penner,
Paul Chavard and Gordon Hempton for going above and beyond the call of
duty.&lt;/p&gt;

&lt;p&gt;Thanks to their efforts, &lt;a href="https://github.com/emberjs/data/pulse/monthly"&gt;we&amp;#39;ve been making steady progress towards
triaging and reviewing pull requests and
issues&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, Yehuda and I have been able to devote significant time to
working on Ember Data thanks to the financial support of
&lt;a href="http://www.addepar.com"&gt;Addepar&lt;/a&gt;. They have my sincere thanks for being
a company that understands the importance of investing in open source.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_a-new-focus'&gt;A New Focus&lt;/h3&gt;
&lt;p&gt;Imagine that you are starting a new job as a developer on an existing
server-side web application. On the first day, you begin the process of
familiarizing yourself with the codebase.&lt;/p&gt;

&lt;p&gt;Since you have experience with the server-side MVC framework that this
company uses, it&amp;#39;s pretty easy going. You see that the templates are
cleanly separated from the controller logic, which is itself cleanly
separated from the models.&lt;/p&gt;

&lt;p&gt;But, wait: something looks amiss in the model code. You take a closer look.&lt;/p&gt;

&lt;p&gt;Instead of using an ORM (like ActiveRecord), which queries the database
for you and automatically turns the results into objects, it looks like
they&amp;#39;re issuing queries manually.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;quot;No problem,&amp;quot;&lt;/em&gt; you think, &lt;em&gt;&amp;quot;I can write SQL with my eyes closed.&amp;quot;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But something doesn&amp;#39;t look quite right. Upon closer examination, you see
that database queries aren&amp;#39;t written in SQL, but some query language
you&amp;#39;ve never seen before.&lt;/p&gt;

&lt;p&gt;You go to your manager&amp;#39;s office and ask her about it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;quot;Oh yeah,&amp;quot;&lt;/em&gt; she says, &lt;em&gt;&amp;quot;We didn&amp;#39;t have time to learn how to setup an
existing database, and our needs were pretty simple at the time. We
decided to roll our own, lightweight database with a simplified query
language.  I guess it sort of just grew over time as our needs grew.&amp;quot;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Horrified, you tell her that you don&amp;#39;t think it&amp;#39;s going to be a good
fit, turn in your badge, and head to your car.&lt;/p&gt;

&lt;p&gt;Unfortunately, when you land your next job, the above scenario plays out
all over again. Instead of using SQL, you discover that they too have rolled
their own custom, ad hoc querying language! This repeats, over and over,
until your descent into madness is complete and you retire to a cabin in
the woods.&lt;/p&gt;

&lt;p&gt;While this hopefully sounds like something out of a nightmare, the sad
fact is that this is precisely the state of the art when it comes to
writing web JSON APIs. Whether you&amp;#39;re writing an Ember.js application, a
mobile app for Android or iOS, or a desktop app, anything that consumes
a web API typically has to deal with URL patterns and JSON structures that are
ad hoc and informally-specified.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is bad.&lt;/strong&gt; Even though we have figured out a standard way of
describing models and their relationships on the server, getting them
into the browser requires every developer write custom, imperative
code. &lt;strong&gt;It&amp;#39;s a colossal waste of human time and energy.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/most-web-architectures.png" alt="A diagram showing most current web architectures. A conventional MVC
server framework asks for records from a database using a standardized
query language (SQL). A conventional client-side MVC app, however, uses
ad hoc JavaScript to retrieve records from the same web server. An
illustrated picture of Jackie Chan looking frustrated appears to the
right."&gt;&lt;/p&gt;

&lt;p&gt;The good news is that the solution should now appear obvious: if you
have a conventional framework on the server and a conventional framework
on the client, they should be able to communicate, automatically, using
a standard interchange format.&lt;/p&gt;

&lt;p&gt;The reality, however, is that Ember.js developers need to use existing
APIs that aren&amp;#39;t 100% consistent. While we were building towards the
future, we were also trying to build something that could be used in the
interim. In retrospect, trying to serve two masters simply muddled our
message, confused users, and complicated the architecture.&lt;/p&gt;

&lt;p&gt;Instead, &lt;strong&gt;Ember Data will now focus on being the best possible library
for Ember.js apps to communicate with consistent, conventional APIs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will leave bridging the gap in the very capable hands of simpler
libraries that require less conceptual overhead to work with custom JSON
APIs, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ebryn/ember-model"&gt;ember-model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/endlessinc/ember-restless"&gt;ember-restless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/charlieridley/emu"&gt;emu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be clear: Ember Data will not be limited to one &lt;em&gt;particular&lt;/em&gt;
convention. We are excited to see the number of third-party adapters,
such as those for
&lt;a href="https://github.com/clintjhill/ember-parse-adapter"&gt;Parse&lt;/a&gt;,
&lt;a href="https://github.com/toranb/ember-data-django-rest-adapter"&gt;Django&lt;/a&gt;,
&lt;a href="https://github.com/rpflorence/ember-localstorage-adapter"&gt;localStorage&lt;/a&gt;,
and &lt;a href="https://github.com/thomasboyt/ember-firebase-adapter"&gt;Firebase&lt;/a&gt;,
continue to grow. The only important feature is that the interchange
between Ember Data and the backend be consistent across all models and
their relationships.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_what-does-this-mean'&gt;What Does This Mean?&lt;/h3&gt;
&lt;p&gt;Most users of Ember Data will not have to make any changes to their
application. If you are using the REST adapter with something like the
&lt;code&gt;ActiveModel::Serializers&lt;/code&gt; gem in Ruby on Rails, you will continue to not
have to write any network code—defining your schema in JavaScript is
enough for us to know how to load data from the server.&lt;/p&gt;

&lt;p&gt;The only notable immediate change is that we will be removing the
&lt;code&gt;BasicAdapter&lt;/code&gt; that we described in last month&amp;#39;s blog post. This adapter
was designed to be a stopgap measure to help people use Ember Data with
ad hoc JSON APIs, but we committed the cardinal sin of inventing an API
instead of extracting it from a real application as we usually do.&lt;/p&gt;

&lt;p&gt;Developers who had tried out the &lt;code&gt;BasicAdapter&lt;/code&gt; appreciated our efforts, but
found it lacking in several important areas. We believe focus is
important, so we will be focusing our efforts on conventional APIs and
will leave the cases previously covered by the &lt;code&gt;BasicAdapter&lt;/code&gt; to other
libraries.&lt;/p&gt;

&lt;p&gt;The other change is that we will be updating the documentation on the
Ember.js website to reflect this new focus, as well as providing
documentation on how to connect Ember apps to less well-defined JSON
APIs.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_json-api'&gt;JSON API&lt;/h3&gt;
&lt;p&gt;In order for Ember Data apps to communicate with a server automatically,
the interchange format must be semantically rich enough to capture all
of the changes to models and their relationships that you may make on
the client.&lt;/p&gt;

&lt;p&gt;Over time, we have been building more functionality into the JSON
format used by the &lt;code&gt;RESTAdapter&lt;/code&gt;. We have decided to formalize this
JSON format so that any backend, whether it be Ruby on Rails, Django,
node.js, or your other favorite server technology, can interact with
Ember.js apps without users having to write network code.&lt;/p&gt;

&lt;p&gt;We have begun the process of documenting this format at
&lt;a href="http://jsonapi.org/"&gt;JSONAPI.org&lt;/a&gt; with &lt;a href="https://twitter.com/brixen"&gt;Brian
Shirai&lt;/a&gt;. This is a living document that
formally describes the JSON format we hope that the authors of
server-side frameworks will use to get seamless compatibility with
Ember.js applications. And, of course, other JavaScript framework are
encouraged to adopt this format so that they can get the same benefit.&lt;/p&gt;

&lt;p&gt;Because the best standards are driven by real implementations, &lt;a href="https://twitter.com/steveklabnik"&gt;Steve
Klabnik&lt;/a&gt; and &lt;a href="https://twitter.com/spastorino"&gt;Santiago
Pastorino&lt;/a&gt; (both major contributors to
Ruby on Rails) have volunteered to integrate this specification into the
&lt;code&gt;rails-api&lt;/code&gt; and &lt;code&gt;ActiveModel::Serializers&lt;/code&gt; projects. This
proof-of-concept will allow us to verify the specification is solving
real-world problems.&lt;/p&gt;

&lt;p&gt;This work will make it extremely simple for Ember.js developers to
integrate with Ruby on Rails, and we hope other server-side frameworks
vendors follow suit.&lt;/p&gt;

&lt;p&gt;Of course, the &lt;code&gt;RESTAdapter&lt;/code&gt; will continue to be configurable, so if you
want to use a JSON API that differs from the default specification, but
is still consistent across all of your models, you don&amp;#39;t have to write
an adapter from scratch.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_regular-releases'&gt;Regular Releases&lt;/h3&gt;
&lt;p&gt;Now that Ember Data is stabilizing rapidly, we will start doing regular
beta releases to make it easier for users to communicate about different
versions. The first release, which we&amp;#39;ll be releasing in the next few
days, will be version 0.13. In keeping with the &lt;a href="http://semver.org/"&gt;SemVer
standard&lt;/a&gt;, we reserve the right to change public
APIs until we reach a 1.0.0 candidate. That being said, we will try our
best to continue keeping the app-facing API stable.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re excited about the future of Ember Data. In the same way we fought
for strong application architecture conventions in the browser, we will
continue to fight for better compatibility between the client and
server. Hopefully soon, writing low-level XHR code will be an optional
optimization, not a requirement.&lt;/p&gt;
</content>
  </entry>
</feed>
